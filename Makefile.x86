
TMP = tmp

# check if download cache directory is available
DL ?= dl

UBOOT_TAG     = xilinx-v2016.1
LINUX_TAG     = xilinx-v2016.1
DTREE_TAG     = xilinx-v2016.2

UBOOT_DIR     = $(TMP)/u-boot-xlnx-$(UBOOT_TAG)
LINUX_DIR     = $(TMP)/linux-xlnx-$(LINUX_TAG)
DTREE_DIR     = $(TMP)/device-tree-xlnx-$(DTREE_TAG)

UBOOT_TAR     = $(DL)/u-boot-xlnx-$(UBOOT_TAG).tar.gz
LINUX_TAR     = $(DL)/linux-xlnx-$(LINUX_TAG).tar.gz
DTREE_TAR     = $(DL)/device-tree-xlnx-$(DTREE_TAG).tar.gz

# it is possible to use an alternative download location (local) by setting environment variables
UBOOT_URL     ?= https://github.com/Xilinx/u-boot-xlnx/archive/$(UBOOT_TAG).tar.gz
LINUX_URL     ?= https://github.com/Xilinx/linux-xlnx/archive/$(LINUX_TAG).tar.gz
DTREE_URL     ?= https://github.com/Xilinx/device-tree-xlnx/archive/$(DTREE_TAG).tar.gz

UBOOT_GIT     ?= https://github.com/Xilinx/u-boot-xlnx.git
LINUX_GIT     ?= https://github.com/Xilinx/linux-xlnx.git
DTREE_GIT     ?= https://github.com/Xilinx/device-tree-xlnx.git

LINUX_CFLAGS = "-O2 -mtune=cortex-a9 -mfpu=neon -mfloat-abi=hard"
UBOOT_CFLAGS = "-O2 -mtune=cortex-a9 -mfpu=neon -mfloat-abi=hard"

################################################################################
#
################################################################################

INSTALL_DIR ?= build

# directories
FPGA_DIR        = fpga
FPGA2_DIR       = fpga2

# targets
FPGA            = $(FPGA_DIR)/out/red_pitaya.bit
FPGA2           = $(FPGA2_DIR)/out/red_pitaya.bit
FSBL            = $(FPGA_DIR)/sdk/fsbl/executable.elf
FSBL2           = $(FPGA2_DIR)/sdk/fsbl/executable.elf
DTS             = $(FPGA_DIR)/sdk/dts/system.dts
DEVICETREE      = $(INSTALL_DIR)/devicetree.dtb
UBOOT           = $(INSTALL_DIR)/u-boot.elf
LINUX           = $(INSTALL_DIR)/uImage
BOOT            = $(INSTALL_DIR)/boot.bin

################################################################################
# tarball
################################################################################

all: fpga u-boot linux devicetree $(BOOT)

$(DL):
	mkdir -p $@

$(TMP):
	mkdir -p $@

$(INSTALL_DIR):
	mkdir -p $@

################################################################################
# FPGA build provides: $(FSBL), $(FPGA), $(DEVICETREE).
################################################################################

.PHONY: fpga fpga2

fpga: $(DTREE_DIR)
	make -C $(FPGA_DIR)

fpga2: $(DTREE_DIR)
	make -C $(FPGA2_DIR)

################################################################################
# U-Boot build provides: $(UBOOT)
################################################################################

ENVTOOLS_CFG    = $(INSTALL_DIR)/etc/fw_env.config

UBOOT_SCRIPT    = $(INSTALL_DIR)/u-boot.scr

.PHONY: u-boot

u-boot: $(UBOOT) $(UBOOT_SCRIPT) $(ENVTOOLS_CFG)

$(UBOOT_TAR): | $(DL)
	curl -L $(UBOOT_URL) -o $@

$(UBOOT_DIR): $(UBOOT_TAR)
	mkdir -p $@
	tar -zxf $< --strip-components=1 --directory=$@
	# Red Pitaya configuration
	cp patches/u-boot/zynq-red-pitaya.dts       $@/arch/arm/dts/zynq-red-pitaya.dts
	cp patches/u-boot/zynq_red_pitaya_defconfig $@/configs/zynq_red_pitaya_defconfig
	cp patches/u-boot/zynq_red_pitaya.h         $@/include/configs/zynq_red_pitaya.h
	patch -d $@ -p 1 < patches/u-boot/u-boot-xlnx-$(UBOOT_TAG)-config.patch
	# add Lantiq PHY driver
	cp patches/u-boot/lantiq.c                  $@/drivers/net/phy/lantiq.c
	patch -d $@ -p 1 < patches/u-boot/u-boot-xlnx-$(UBOOT_TAG)-lantiq.patch

$(UBOOT): $(UBOOT_DIR)
	mkdir -p $(@D)
	make -C $< arch=ARM zynq_red_pitaya_defconfig
	make -C $< arch=ARM CFLAGS=$(UBOOT_CFLAGS) all
	cp $</u-boot $@

$(UBOOT_SCRIPT): $(INSTALL_DIR) $(UBOOT_DIR) $(UBOOT)
	$(UBOOT_DIR)/tools/mkimage -A ARM -O linux -T script -C none -a 0 -e 0 -n "boot Debian" -d patches/u-boot/u-boot.script $@

$(ENVTOOLS_CFG): $(UBOOT_DIR)
	mkdir -p $(INSTALL_DIR)/etc/
	cp $</tools/env/fw_env.config $(INSTALL_DIR)/etc

################################################################################
# Linux build provides: $(LINUX)
################################################################################

.PHONY: linux

linux: $(LINUX)

$(LINUX_TAR): | $(DL)
	curl -L $(LINUX_URL) -o $@

$(LINUX_DIR): $(LINUX_TAR)
	mkdir -p $@
	tar -zxf $< --strip-components=1 --directory=$@
#	git clone -b fix_cyclic https://github.com/na1pir/linux-xlnx.git $(LINUX_DIR)
	patch -d $@ -p 1 < patches/linux-xlnx-$(LINUX_TAG)-config.patch
	patch -d $@ -p 1 < patches/linux-xlnx-$(LINUX_TAG)-eeprom.patch
	patch -d $@ -p 1 < patches/linux-xlnx-$(LINUX_TAG)-lantiq.patch
	patch -d $@ -p 1 < patches/linux-xlnx-$(LINUX_TAG)-axidma.patch
	patch -d $@ -p 1 < patches/linux-xlnx-$(LINUX_TAG)-iio-xadc.patch
	cp -r patches/lantiq/*  $@/drivers/net/phy/
	# DMA support related patches
	#cp -r patches/xilinx/*  $@/drivers/dma/xilinx/
	cp -r patches/redpitaya $@/drivers/
	patch -d $@ -p 1 < patches/linux-xlnx-$(LINUX_TAG)-redpitaya.patch

$(LINUX): $(LINUX_DIR)
	make -C $< mrproper
	make -C $< ARCH=arm xilinx_zynq_defconfig
	make -C $< ARCH=arm CFLAGS=$(LINUX_CFLAGS) -j $(shell grep -c ^processor /proc/cpuinfo) UIMAGE_LOADADDR=0x8000 uImage
	cp $</arch/arm/boot/uImage $@

################################################################################
# device tree processing
################################################################################

.PHONY: devicetree

devicetree: $(DEVICETREE)

$(DTREE_TAR): | $(DL)
	curl -L $(DTREE_URL) -o $@

$(DTREE_DIR): $(DTREE_TAR)
	mkdir -p $@
	tar -zxf $< --strip-components=1 --directory=$@

$(DEVICETREE): $(DTREE_DIR) $(LINUX) fpga2
	cp $(DTS) $(TMP)/devicetree.dts
	cp $(FPGA2_DIR)/sdk/dts/zynq-7000.dtsi $(FPGA2_DIR)/sdk/dts/zynq-7000.dtsi.orig
	cp $(FPGA2_DIR)/sdk/dts/pl.dtsi $(FPGA2_DIR)/sdk/dts/pl.dtsi.orig
	patch $(FPGA2_DIR)/sdk/dts/pl.dtsi patches/pl.patch
	patch $(FPGA2_DIR)/sdk/dts/zynq-7000.dtsi patches/zynq-7000.patch
	patch $(TMP)/devicetree.dts patches/devicetree.patch
	$(LINUX_DIR)/scripts/dtc/dtc -I dts -O dtb -o $(DEVICETREE) -i $(FPGA2_DIR)/sdk/dts/ $(TMP)/devicetree.dts
	tools/dtc/bin/dtc -O dtb -o $(INSTALL_DIR)/amba_pl.dtbo -b 0 -@ patches/amba_pl.dts
	cp patches/amba_pl.sh patches/rmamba_pl.sh $(INSTALL_DIR)
	cp $(FPGA2_DIR)/sdk/dts/pl.dtsi.orig $(FPGA2_DIR)/sdk/dts/pl.dtsi
	cp $(FPGA2_DIR)/sdk/dts/zynq-7000.dtsi.orig $(FPGA2_DIR)/sdk/dts/zynq-7000.dtsi
################################################################################
# boot file generator
################################################################################

$(BOOT): fpga2 $(UBOOT)
	@echo img:{[bootloader] $(FSBL2) $(FPGA2) $(UBOOT) } > boot_uboot.bif
	bootgen -image boot_uboot.bif -w -o $@

################################################################################
#
################################################################################

clean:
	-make -C $(LINUX_DIR) clean
	make -C $(FPGA_DIR) clean
	-make -C $(UBOOT_DIR) clean
	# todo, remove downloaded libraries and symlinks
	$(RM) $(INSTALL_DIR) -rf
